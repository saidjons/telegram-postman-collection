{
    "version": "2.2.0",
    "types": [
        {
            "name": "Update",
            "description": "This object represents an incoming update.Only one of the optional parameters can be present in any given update.",
            "fields": [
                {
                    "name": "update_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "The update‘s unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you’re using Webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order."
                },
                {
                    "name": "message",
                    "types": [
                        "Message"
                    ],
                    "optional": true,
                    "description": "Optional. New incoming message of any kind — text, photo, sticker, etc."
                },
                {
                    "name": "edited_message",
                    "types": [
                        "Message"
                    ],
                    "optional": true,
                    "description": "Optional. New version of a message that is known to the bot and was edited"
                },
                {
                    "name": "inline_query",
                    "types": [
                        "InlineQuery"
                    ],
                    "optional": true,
                    "description": "Optional. New incoming inline query"
                },
                {
                    "name": "chosen_inline_result",
                    "types": [
                        "ChosenInlineResult"
                    ],
                    "optional": true,
                    "description": "Optional. The result of an inline query that was chosen by a user and sent to their chat partner."
                },
                {
                    "name": "callback_query",
                    "types": [
                        "CallbackQuery"
                    ],
                    "optional": true,
                    "description": "Optional. New incoming callback query"
                }
            ],
            "extended_by": []
        },
        {
            "name": "WebhookInfo",
            "description": "Contains information about the current status of a webhook.",
            "fields": [
                {
                    "name": "url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Webhook URL, may be empty if webhook is not set up"
                },
                {
                    "name": "has_custom_certificate",
                    "types": [
                        "bool"
                    ],
                    "optional": false,
                    "description": "True, if a custom certificate was provided for webhook certificate checks"
                },
                {
                    "name": "pending_update_count",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Number of updates awaiting delivery"
                },
                {
                    "name": "last_error_date",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Unix time for the most recent error that happened when trying to deliver an update via webhook"
                },
                {
                    "name": "last_error_message",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Error message in human-readable format for the most recent error that happened when trying to deliver an update via webhook"
                }
            ],
            "extended_by": []
        },
        {
            "name": "User",
            "description": "This object represents a Telegram user or bot.",
            "fields": [
                {
                    "name": "id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this user or bot"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "User‘s or bot’s first name"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. User‘s or bot’s last name"
                },
                {
                    "name": "username",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. User‘s or bot’s username"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Chat",
            "description": "This object represents a chat.",
            "fields": [
                {
                    "name": "id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this chat. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier."
                },
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of chat, can be either “private”, “group”, “supergroup” or “channel”"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title, for supergroups, channels and group chats"
                },
                {
                    "name": "username",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Username, for private chats, supergroups and channels if available"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. First name of the other party in a private chat"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Last name of the other party in a private chat"
                },
                {
                    "name": "all_members_are_administrators",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. True if a group has ‘All Members Are Admins’ enabled."
                }
            ],
            "extended_by": []
        },
        {
            "name": "Message",
            "description": "This object represents a message.",
            "fields": [
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique message identifier"
                },
                {
                    "name": "from",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. Sender, can be empty for messages sent to channels"
                },
                {
                    "name": "date",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Date the message was sent in Unix time"
                },
                {
                    "name": "chat",
                    "types": [
                        "Chat"
                    ],
                    "optional": false,
                    "description": "Conversation the message belongs to"
                },
                {
                    "name": "forward_from",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. For forwarded messages, sender of the original message"
                },
                {
                    "name": "forward_from_chat",
                    "types": [
                        "Chat"
                    ],
                    "optional": true,
                    "description": "Optional. For messages forwarded from a channel, information about the original channel"
                },
                {
                    "name": "forward_date",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. For forwarded messages, date the original message was sent in Unix time"
                },
                {
                    "name": "reply_to_message",
                    "types": [
                        "Message"
                    ],
                    "optional": true,
                    "description": "Optional. For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply."
                },
                {
                    "name": "edit_date",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Date the message was last edited in Unix time"
                },
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. For text messages, the actual UTF-8 text of the message, 0-4096 characters."
                },
                {
                    "name": "entities",
                    "types": [
                        "Array<MessageEntity>"
                    ],
                    "optional": true,
                    "description": "Optional. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text"
                },
                {
                    "name": "audio",
                    "types": [
                        "Audio"
                    ],
                    "optional": true,
                    "description": "Optional. Message is an audio file, information about the file"
                },
                {
                    "name": "document",
                    "types": [
                        "Document"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a general file, information about the file"
                },
                {
                    "name": "game",
                    "types": [
                        "Game"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a game, information about the game. More about games »"
                },
                {
                    "name": "photo",
                    "types": [
                        "Array<PhotoSize>"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a photo, available sizes of the photo"
                },
                {
                    "name": "sticker",
                    "types": [
                        "Sticker"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a sticker, information about the sticker"
                },
                {
                    "name": "video",
                    "types": [
                        "Video"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a video, information about the video"
                },
                {
                    "name": "voice",
                    "types": [
                        "Voice"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a voice message, information about the file"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption for the document, photo or video, 0-200 characters"
                },
                {
                    "name": "contact",
                    "types": [
                        "Contact"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a shared contact, information about the contact"
                },
                {
                    "name": "location",
                    "types": [
                        "Location"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a shared location, information about the location"
                },
                {
                    "name": "venue",
                    "types": [
                        "Venue"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a venue, information about the venue"
                },
                {
                    "name": "new_chat_member",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. A new member was added to the group, information about them (this member may be the bot itself)"
                },
                {
                    "name": "left_chat_member",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. A member was removed from the group, information about them (this member may be the bot itself)"
                },
                {
                    "name": "new_chat_title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. A chat title was changed to this value"
                },
                {
                    "name": "new_chat_photo",
                    "types": [
                        "Array<PhotoSize>"
                    ],
                    "optional": true,
                    "description": "Optional. A chat photo was change to this value"
                },
                {
                    "name": "delete_chat_photo",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Service message: the chat photo was deleted"
                },
                {
                    "name": "group_chat_created",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Service message: the group has been created"
                },
                {
                    "name": "supergroup_chat_created",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Service message: the supergroup has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup."
                },
                {
                    "name": "channel_chat_created",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Service message: the channel has been created. This field can‘t be received in a message coming through updates, because bot can’t be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel."
                },
                {
                    "name": "migrate_to_chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier."
                },
                {
                    "name": "migrate_from_chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. The supergroup has been migrated from a group with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier."
                },
                {
                    "name": "pinned_message",
                    "types": [
                        "Message"
                    ],
                    "optional": true,
                    "description": "Optional. Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it is itself a reply."
                }
            ],
            "extended_by": []
        },
        {
            "name": "MessageEntity",
            "description": "This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the entity. Can be mention (@username), hashtag, bot_command, url, email, bold (bold text), italic (italic text), code (monowidth string), pre (monowidth block), text_link (for clickable text URLs), text_mention (for users without usernames)"
                },
                {
                    "name": "offset",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Offset in UTF-16 code units to the start of the entity"
                },
                {
                    "name": "length",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Length of the entity in UTF-16 code units"
                },
                {
                    "name": "url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. For “text_link” only, url that will be opened after user taps on the text"
                },
                {
                    "name": "user",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. For “text_mention” only, the mentioned user"
                }
            ],
            "extended_by": []
        },
        {
            "name": "PhotoSize",
            "description": "This object represents one size of a photo or a file / sticker thumbnail.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "width",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Photo width"
                },
                {
                    "name": "height",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Photo height"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Audio",
            "description": "This object represents an audio file to be treated as music by the Telegram clients.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Duration of the audio in seconds as defined by sender"
                },
                {
                    "name": "performer",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Performer of the audio as defined by sender or by audio tags"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title of the audio as defined by sender or by audio tags"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. MIME type of the file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Document",
            "description": "This object represents a general file (as opposed to photos, voice messages and audio files).",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique file identifier"
                },
                {
                    "name": "thumb",
                    "types": [
                        "PhotoSize"
                    ],
                    "optional": true,
                    "description": "Optional. Document thumbnail as defined by sender"
                },
                {
                    "name": "file_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Original filename as defined by sender"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. MIME type of the file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Sticker",
            "description": "This object represents a sticker.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "width",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Sticker width"
                },
                {
                    "name": "height",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Sticker height"
                },
                {
                    "name": "thumb",
                    "types": [
                        "PhotoSize"
                    ],
                    "optional": true,
                    "description": "Optional. Sticker thumbnail in .webp or .jpg format"
                },
                {
                    "name": "emoji",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Emoji associated with the sticker"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Video",
            "description": "This object represents a video file.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "width",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Video width as defined by sender"
                },
                {
                    "name": "height",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Video height as defined by sender"
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Duration of the video in seconds as defined by sender"
                },
                {
                    "name": "thumb",
                    "types": [
                        "PhotoSize"
                    ],
                    "optional": true,
                    "description": "Optional. Video thumbnail"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Mime type of a file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Voice",
            "description": "This object represents a voice note.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Duration of the audio in seconds as defined by sender"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. MIME type of the file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Contact",
            "description": "This object represents a phone contact.",
            "fields": [
                {
                    "name": "phone_number",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's phone number"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's first name"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Contact's last name"
                },
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Contact's user identifier in Telegram"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Location",
            "description": "This object represents a point on the map.",
            "fields": [
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Longitude as defined by sender"
                },
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Latitude as defined by sender"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Venue",
            "description": "This object represents a venue.",
            "fields": [
                {
                    "name": "location",
                    "types": [
                        "Location"
                    ],
                    "optional": false,
                    "description": "Venue location"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Name of the venue"
                },
                {
                    "name": "address",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Address of the venue"
                },
                {
                    "name": "foursquare_id",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Foursquare identifier of the venue"
                }
            ],
            "extended_by": []
        },
        {
            "name": "UserProfilePhotos",
            "description": "This object represent a user's profile pictures.",
            "fields": [
                {
                    "name": "total_count",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Total number of profile pictures the target user has"
                },
                {
                    "name": "photos",
                    "types": [
                        "Array<Array<PhotoSize>>"
                    ],
                    "optional": false,
                    "description": "Requested profile pictures (in up to 4 sizes each)"
                }
            ],
            "extended_by": []
        },
        {
            "name": "File",
            "description": "This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size, if known"
                },
                {
                    "name": "file_path",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. File path. Use https://api.telegram.org/file/bot<token>/<file_path> to get the file."
                }
            ],
            "extended_by": []
        },
        {
            "name": "ReplyKeyboardMarkup",
            "description": "This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).",
            "fields": [
                {
                    "name": "keyboard",
                    "types": [
                        "Array<Array<KeyboardButton>>"
                    ],
                    "optional": false,
                    "description": "Array of button rows, each represented by an Array of KeyboardButton objects"
                },
                {
                    "name": "resize_keyboard",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app's standard keyboard."
                },
                {
                    "name": "one_time_keyboard",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat – the user can press a special button in the input field to see the custom keyboard again. Defaults to false."
                },
                {
                    "name": "selective",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.Example: A user requests to change the bot‘s language, bot replies to the request with a keyboard to select the new language. Other users in the group don’t see the keyboard."
                }
            ],
            "extended_by": []
        },
        {
            "name": "KeyboardButton",
            "description": "This object represents one button of the reply keyboard. For simple text buttons String can be used instead of this object to specify text of the button. Optional fields are mutually exclusive.",
            "fields": [
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Text of the button. If none of the optional fields are used, it will be sent to the bot as a message when the button is pressed"
                },
                {
                    "name": "request_contact",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. If True, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only"
                },
                {
                    "name": "request_location",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. If True, the user's current location will be sent when the button is pressed. Available in private chats only"
                }
            ],
            "extended_by": []
        },
        {
            "name": "ReplyKeyboardHide",
            "description": "Upon receiving a message with this object, Telegram clients will hide the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).",
            "fields": [
                {
                    "name": "hide_keyboard",
                    "types": [
                        "bool"
                    ],
                    "optional": false,
                    "description": "Requests clients to hide the custom keyboard"
                },
                {
                    "name": "selective",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Use this parameter if you want to hide keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.Example: A user votes in a poll, bot returns confirmation message in reply to the vote and hides keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet."
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineKeyboardMarkup",
            "description": "This object represents an inline keyboard that appears right next to the message it belongs to.",
            "fields": [
                {
                    "name": "inline_keyboard",
                    "types": [
                        "Array<Array<InlineKeyboardButton>>"
                    ],
                    "optional": false,
                    "description": "Array of button rows, each represented by an Array of InlineKeyboardButton objects"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineKeyboardButton",
            "description": "This object represents one button of an inline keyboard. You must use exactly one of the optional fields.",
            "fields": [
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Label text on the button"
                },
                {
                    "name": "url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. HTTP url to be opened when button is pressed"
                },
                {
                    "name": "callback_data",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Data to be sent in a callback query to the bot when button is pressed, 1-64 bytes"
                },
                {
                    "name": "switch_inline_query",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot‘s username and the specified inline query in the input field. Can be empty, in which case just the bot’s username will be inserted.Note: This offers an easy way for users to start using your bot in inline mode when they are currently in a private chat with it. Especially useful when combined with switch_pm… actions – in this case the user will be automatically returned to the chat they switched from, skipping the chat selection screen."
                },
                {
                    "name": "switch_inline_query_current_chat",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. If set, pressing the button will insert the bot‘s username and the specified inline query in the current chat's input field. Can be empty, in which case only the bot’s username will be inserted."
                },
                {
                    "name": "callback_game",
                    "types": [
                        "CallbackGame"
                    ],
                    "optional": true,
                    "description": "Optional. Description of the game that will be launched when the user presses the button.NOTE: This type of button must always be the first button in the first row."
                }
            ],
            "extended_by": []
        },
        {
            "name": "CallbackQuery",
            "description": "This object represents an incoming callback query from a callback button in an inline keyboard. If the button that originated the query was attached to a message sent by the bot, the field message will be present. If the button was attached to a message sent via the bot (in inline mode), the field inline_message_id will be present. Exactly one of the fields data or game_short_name will be present.",
            "fields": [
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this query"
                },
                {
                    "name": "from",
                    "types": [
                        "User"
                    ],
                    "optional": false,
                    "description": "Sender"
                },
                {
                    "name": "message",
                    "types": [
                        "Message"
                    ],
                    "optional": true,
                    "description": "Optional. Message with the callback button that originated the query. Note that message content and message date will not be available if the message is too old"
                },
                {
                    "name": "inline_message_id",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Identifier of the message sent via the bot in inline mode, that originated the query."
                },
                {
                    "name": "chat_instance",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games."
                },
                {
                    "name": "data",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Data associated with the callback button. Be aware that a bad client can send arbitrary data in this field."
                },
                {
                    "name": "game_short_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short name of a Game to be returned, serves as the unique identifier for the game"
                }
            ],
            "extended_by": []
        },
        {
            "name": "ForceReply",
            "description": "Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot‘s message and tapped ’Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.",
            "fields": [
                {
                    "name": "force_reply",
                    "types": [
                        "bool"
                    ],
                    "optional": false,
                    "description": "Shows reply interface to the user, as if they manually selected the bot‘s message and tapped ’Reply'"
                },
                {
                    "name": "selective",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message."
                }
            ],
            "extended_by": []
        },
        {
            "name": "ChatMember",
            "description": "This object contains information about one member of the chat.",
            "fields": [
                {
                    "name": "user",
                    "types": [
                        "User"
                    ],
                    "optional": false,
                    "description": "Information about the user"
                },
                {
                    "name": "status",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "The member's status in the chat. Can be “creator”, “administrator”, “member”, “left” or “kicked”"
                }
            ],
            "extended_by": []
        },
        {
            "name": "ResponseParameters",
            "description": "Contains information about why a request was unsuccessfull.",
            "fields": [
                {
                    "name": "migrate_to_chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. The group has been migrated to a supergroup with the specified identifier. This number may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier."
                },
                {
                    "name": "retry_after",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. In case of exceeding flood control, the number of seconds left to wait before the request can be repeated"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InputFile",
            "description": "This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.",
            "fields": [],
            "extended_by": []
        },
        {
            "name": "InlineQuery",
            "description": "This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.",
            "fields": [
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this query"
                },
                {
                    "name": "from",
                    "types": [
                        "User"
                    ],
                    "optional": false,
                    "description": "Sender"
                },
                {
                    "name": "location",
                    "types": [
                        "Location"
                    ],
                    "optional": true,
                    "description": "Optional. Sender location, only for bots that request user location"
                },
                {
                    "name": "query",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Text of the query (up to 512 characters)"
                },
                {
                    "name": "offset",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Offset of the results to be returned, can be controlled by the bot"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResult",
            "description": "This object represents one result of an inline query. Telegram clients currently support results of the following 20 types:",
            "fields": [],
            "extended_by": [
                "InlineQueryResultCachedAudio",
                "InlineQueryResultCachedDocument",
                "InlineQueryResultCachedGif",
                "InlineQueryResultCachedMpeg4Gif",
                "InlineQueryResultCachedPhoto",
                "InlineQueryResultCachedSticker",
                "InlineQueryResultCachedVideo",
                "InlineQueryResultCachedVoice",
                "InlineQueryResultArticle",
                "InlineQueryResultAudio",
                "InlineQueryResultContact",
                "InlineQueryResultGame",
                "InlineQueryResultDocument",
                "InlineQueryResultGif",
                "InlineQueryResultLocation",
                "InlineQueryResultMpeg4Gif",
                "InlineQueryResultPhoto",
                "InlineQueryResultVenue",
                "InlineQueryResultVideo",
                "InlineQueryResultVoice"
            ]
        },
        {
            "name": "InlineQueryResultArticle",
            "description": "Represents a link to an article or web page.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be article"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 Bytes"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title of the result"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": false,
                    "description": "Content of the message to be sent"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. URL of the result"
                },
                {
                    "name": "hide_url",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Pass True, if you don't want the URL to be shown in the message"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short description of the result"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Url of the thumbnail for the result"
                },
                {
                    "name": "thumb_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail width"
                },
                {
                    "name": "thumb_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail height"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultPhoto",
            "description": "Represents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be photo"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "photo_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid URL of the photo. Photo must be in jpeg format. Photo size must not exceed 5MB"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "URL of the thumbnail for the photo"
                },
                {
                    "name": "photo_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Width of the photo"
                },
                {
                    "name": "photo_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Height of the photo"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title for the result"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short description of the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the photo to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the photo"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultGif",
            "description": "Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be gif"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "gif_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid URL for the GIF file. File size must not exceed 1MB"
                },
                {
                    "name": "gif_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Width of the GIF"
                },
                {
                    "name": "gif_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Height of the GIF"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "URL of the static thumbnail for the result (jpeg or gif)"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title for the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the GIF file to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the GIF animation"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultMpeg4Gif",
            "description": "Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be mpeg4_gif"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "mpeg4_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid URL for the MP4 file. File size must not exceed 1MB"
                },
                {
                    "name": "mpeg4_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Video width"
                },
                {
                    "name": "mpeg4_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Video height"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "URL of the static thumbnail (jpeg or gif) for the result"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title for the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the MPEG-4 file to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the video animation"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultVideo",
            "description": "Represents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be video"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "video_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid URL for the embedded video player or video file"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Mime type of the content of video url, “text/html” or “video/mp4”"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "URL of the thumbnail (jpeg only) for the video"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title for the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the video to be sent, 0-200 characters"
                },
                {
                    "name": "video_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Video width"
                },
                {
                    "name": "video_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Video height"
                },
                {
                    "name": "video_duration",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Video duration in seconds"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short description of the result"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the video"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultAudio",
            "description": "Represents a link to an mp3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be audio"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "audio_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid URL for the audio file"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption, 0-200 characters"
                },
                {
                    "name": "performer",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Performer"
                },
                {
                    "name": "audio_duration",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Audio duration in seconds"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the audio"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultVoice",
            "description": "Represents a link to a voice recording in an .ogg container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the the voice message.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be voice"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "voice_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid URL for the voice recording"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Recording title"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption, 0-200 characters"
                },
                {
                    "name": "voice_duration",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Recording duration in seconds"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the voice recording"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultDocument",
            "description": "Represents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be document"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title for the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the document to be sent, 0-200 characters"
                },
                {
                    "name": "document_url",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid URL for the file"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Mime type of the content of the file, either “application/pdf” or “application/zip”"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short description of the result"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the file"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. URL of the thumbnail (jpeg only) for the file"
                },
                {
                    "name": "thumb_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail width"
                },
                {
                    "name": "thumb_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail height"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultLocation",
            "description": "Represents a location on a map. By default, the location will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the location.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be location"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 Bytes"
                },
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Location latitude in degrees"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Location longitude in degrees"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Location title"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the location"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Url of the thumbnail for the result"
                },
                {
                    "name": "thumb_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail width"
                },
                {
                    "name": "thumb_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail height"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultVenue",
            "description": "Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the venue.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be venue"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 Bytes"
                },
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Latitude of the venue location in degrees"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Longitude of the venue location in degrees"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title of the venue"
                },
                {
                    "name": "address",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Address of the venue"
                },
                {
                    "name": "foursquare_id",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Foursquare identifier of the venue if known"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the venue"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Url of the thumbnail for the result"
                },
                {
                    "name": "thumb_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail width"
                },
                {
                    "name": "thumb_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail height"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultContact",
            "description": "Represents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the contact.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be contact"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 Bytes"
                },
                {
                    "name": "phone_number",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's phone number"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's first name"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Contact's last name"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the contact"
                },
                {
                    "name": "thumb_url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Url of the thumbnail for the result"
                },
                {
                    "name": "thumb_width",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail width"
                },
                {
                    "name": "thumb_height",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. Thumbnail height"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultGame",
            "description": "Represents a Game.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be game"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "game_short_name",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Short name of the game"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedPhoto",
            "description": "Represents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be photo"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "photo_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier of the photo"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title for the result"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short description of the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the photo to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the photo"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedGif",
            "description": "Represents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with specified content instead of the animation.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be gif"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "gif_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier for the GIF file"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title for the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the GIF file to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the GIF animation"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedMpeg4Gif",
            "description": "Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be mpeg4_gif"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "mpeg4_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier for the MP4 file"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Title for the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the MPEG-4 file to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the video animation"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedSticker",
            "description": "Represents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the sticker.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be sticker"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "sticker_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier of the sticker"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the sticker"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedDocument",
            "description": "Represents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only pdf-files and zip archives can be sent using this method.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be document"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title for the result"
                },
                {
                    "name": "document_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier for the file"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short description of the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the document to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the file"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedVideo",
            "description": "Represents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be video"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "video_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier for the video file"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title for the result"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Short description of the result"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption of the video to be sent, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the video"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedVoice",
            "description": "Represents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the voice message.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be voice"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "voice_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier for the voice message"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Voice message title"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the voice message"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InlineQueryResultCachedAudio",
            "description": "Represents a link to an mp3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.",
            "fields": [
                {
                    "name": "type",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of the result, must be audio"
                },
                {
                    "name": "id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this result, 1-64 bytes"
                },
                {
                    "name": "audio_file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "A valid file identifier for the audio file"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Caption, 0-200 characters"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "optional": true,
                    "description": "Optional. Inline keyboard attached to the message"
                },
                {
                    "name": "input_message_content",
                    "types": [
                        "InputMessageContent"
                    ],
                    "optional": true,
                    "description": "Optional. Content of the message to be sent instead of the audio"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InputMessageContent",
            "description": "This object represents the content of a message to be sent as a result of an inline query. Telegram clients currently support the following 4 types:",
            "fields": [],
            "extended_by": [
                "InputTextMessageContent",
                "InputLocationMessageContent",
                "InputVenueMessageContent",
                "InputContactMessageContent"
            ]
        },
        {
            "name": "InputTextMessageContent",
            "description": "Represents the content of a text message to be sent as the result of an inline query.",
            "fields": [
                {
                    "name": "message_text",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Text of the message to be sent, 1-4096 characters"
                },
                {
                    "name": "parse_mode",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Send Markdown or HTML, if you want Telegram apps to show bold, italic, fixed-width text or inline URLs in your bot's message."
                },
                {
                    "name": "disable_web_page_preview",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Disables link previews for links in the sent message"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InputLocationMessageContent",
            "description": "Represents the content of a location message to be sent as the result of an inline query.",
            "fields": [
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Latitude of the location in degrees"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Longitude of the location in degrees"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InputVenueMessageContent",
            "description": "Represents the content of a venue message to be sent as the result of an inline query.",
            "fields": [
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Latitude of the venue in degrees"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Longitude of the venue in degrees"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Name of the venue"
                },
                {
                    "name": "address",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Address of the venue"
                },
                {
                    "name": "foursquare_id",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Foursquare identifier of the venue, if known"
                }
            ],
            "extended_by": []
        },
        {
            "name": "InputContactMessageContent",
            "description": "Represents the content of a contact message to be sent as the result of an inline query.",
            "fields": [
                {
                    "name": "phone_number",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's phone number"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's first name"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Contact's last name"
                }
            ],
            "extended_by": []
        },
        {
            "name": "ChosenInlineResult",
            "description": "Represents a result of an inline query that was chosen by the user and sent to their chat partner.",
            "fields": [
                {
                    "name": "result_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "The unique identifier for the result that was chosen"
                },
                {
                    "name": "from",
                    "types": [
                        "User"
                    ],
                    "optional": false,
                    "description": "The user that chose the result"
                },
                {
                    "name": "location",
                    "types": [
                        "Location"
                    ],
                    "optional": true,
                    "description": "Optional. Sender location, only for bots that require user location"
                },
                {
                    "name": "inline_message_id",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message. Will be also received in callback queries and can be used to edit the message."
                },
                {
                    "name": "query",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "The query that was used to obtain the result"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Game",
            "description": "This object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers.",
            "fields": [
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Title of the game"
                },
                {
                    "name": "description",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Description of the game"
                },
                {
                    "name": "photo",
                    "types": [
                        "Array<PhotoSize>"
                    ],
                    "optional": false,
                    "description": "Photo that will be displayed in the game message in chats."
                },
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Brief description of the game or high scores included in the game message. Can be automatically edited to include current high scores for the game when the bot calls setGameScore, or manually edited using editMessageText. 0-4096 characters."
                },
                {
                    "name": "text_entities",
                    "types": [
                        "Array<MessageEntity>"
                    ],
                    "optional": true,
                    "description": "Optional. Special entities that appear in text, such as usernames, URLs, bot commands, etc."
                },
                {
                    "name": "animation",
                    "types": [
                        "Animation"
                    ],
                    "optional": true,
                    "description": "Optional. Animation that will be displayed in the game message in chats. Upload via BotFather"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Animation",
            "description": "You can provide an animation for your game so that it looks stylish in chats (check out Lumberjack for an example). This object represents an animation file to be displayed in the message containing a game.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique file identifier"
                },
                {
                    "name": "thumb",
                    "types": [
                        "PhotoSize"
                    ],
                    "optional": true,
                    "description": "Optional. Animation thumbnail as defined by sender"
                },
                {
                    "name": "file_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Original animation filename as defined by sender"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. MIME type of the file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "CallbackGame",
            "description": "A placeholder, currently holds no information. Use BotFather to set up your game.",
            "fields": [],
            "extended_by": []
        },
        {
            "name": "GameHighScore",
            "description": "This object represents one row of the high scores table for a game.",
            "fields": [
                {
                    "name": "position",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Position in high score table for the game"
                },
                {
                    "name": "user",
                    "types": [
                        "User"
                    ],
                    "optional": false,
                    "description": "User"
                },
                {
                    "name": "score",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Score"
                }
            ],
            "extended_by": []
        }
    ],
    "methods": [
        {
            "name": "getUpdates",
            "description": "Use this method to receive incoming updates using long polling (wiki). An Array of Update objects is returned.",
            "fields": [
                {
                    "name": "offset",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Identifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as getUpdates is called with an offset higher than its update_id. The negative offset can be specified to retrieve updates starting from -offset update from the end of the updates queue. All previous updates will forgotten."
                },
                {
                    "name": "limit",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Limits the number of updates to be retrieved. Values between 1—100 are accepted. Defaults to 100."
                },
                {
                    "name": "timeout",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Timeout in seconds for long polling. Defaults to 0, i.e. usual short polling. Should be positive, short polling should be used for testing purposes only."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Array<Update>"
            ]
        },
        {
            "name": "setWebhook",
            "description": "Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts.\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. https://www.example.com/<token>. Since nobody else knows your bot‘s token, you can be pretty sure it’s us.",
            "fields": [
                {
                    "name": "url",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "HTTPS url to send updates to. Use an empty string to remove webhook integration"
                },
                {
                    "name": "certificate",
                    "types": [
                        "InputFile"
                    ],
                    "required": false,
                    "description": "Upload your public key certificate so that the root certificate in use can be checked. See our self-signed guide for details."
                }
            ],
            "extended_by": [],
            "return_types": []
        },
        {
            "name": "getWebhookInfo",
            "description": "Use this method to get current webhook status. Requires no parameters. On success, returns a WebhookInfo object. If the bot is using getUpdates, will return an object with the url field empty.",
            "fields": [],
            "extended_by": [],
            "return_types": [
                "WebhookInfo"
            ]
        },
        {
            "name": "getMe",
            "description": "A simple method for testing your bot's auth token. Requires no parameters. Returns basic information about the bot in form of a User object.",
            "fields": [],
            "extended_by": [],
            "return_types": [
                "User"
            ]
        },
        {
            "name": "sendMessage",
            "description": "Use this method to send text messages. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Text of the message to be sent"
                },
                {
                    "name": "parse_mode",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Send Markdown or HTML, if you want Telegram apps to show bold, italic, fixed-width text or inline URLs in your bot's message."
                },
                {
                    "name": "disable_web_page_preview",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Disables link previews for links in this message"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "forwardMessage",
            "description": "Use this method to forward messages of any kind. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "from_chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "Unique message identifier"
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendPhoto",
            "description": "Use this method to send photos. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "photo",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "required": true,
                    "description": "Photo to send. Pass a file_id as String to send a photo that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a photo from the Internet, or upload a new photo using multipart/form-data."
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Photo caption (may also be used when resending photos by file_id), 0-200 characters"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendAudio",
            "description": "Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\nFor sending voice messages, use the sendVoice method instead.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "audio",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "required": true,
                    "description": "Audio file to send. Pass a file_id as String to send an audio file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an audio file from the Internet, or upload a new one using multipart/form-data."
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Audio caption, 0-200 characters"
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Duration of the audio in seconds"
                },
                {
                    "name": "performer",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Performer"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Track name"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendDocument",
            "description": "Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "document",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "required": true,
                    "description": "File to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data."
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Document caption (may also be used when resending documents by file_id), 0-200 characters"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendSticker",
            "description": "Use this method to send .webp stickers. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "sticker",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "required": true,
                    "description": "Sticker to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a .webp file from the Internet, or upload a new one using multipart/form-data."
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendVideo",
            "description": "Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "video",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "required": true,
                    "description": "Video to send. Pass a file_id as String to send a video that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a video from the Internet, or upload a new video using multipart/form-data."
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Duration of sent video in seconds"
                },
                {
                    "name": "width",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Video width"
                },
                {
                    "name": "height",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Video height"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Video caption (may also be used when resending videos by file_id), 0-200 characters"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendVoice",
            "description": "Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "voice",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "required": true,
                    "description": "Audio file to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data."
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Voice message caption, 0-200 characters"
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Duration of the voice message in seconds"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendLocation",
            "description": "Use this method to send point on the map. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "required": true,
                    "description": "Latitude of location"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "required": true,
                    "description": "Longitude of location"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendVenue",
            "description": "Use this method to send information about a venue. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "required": true,
                    "description": "Latitude of the venue"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "required": true,
                    "description": "Longitude of the venue"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Name of the venue"
                },
                {
                    "name": "address",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Address of the venue"
                },
                {
                    "name": "foursquare_id",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Foursquare identifier of the venue"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendContact",
            "description": "Use this method to send phone contacts. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "phone_number",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Contact's phone number"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Contact's first name"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Contact's last name"
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendChatAction",
            "description": "Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). \nWe only recommend using this method when a response from the bot will take a noticeable amount of time to arrive.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "action",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Type of action to broadcast. Choose one, depending on what the user is about to receive: typing for text messages, upload_photo for photos, record_video or upload_video for videos, record_audio or upload_audio for audio files, upload_document for general files, find_location for location data."
                }
            ],
            "extended_by": [],
            "return_types": []
        },
        {
            "name": "getUserProfilePhotos",
            "description": "Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.",
            "fields": [
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "Unique identifier of the target user"
                },
                {
                    "name": "offset",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Sequential number of the first photo to be returned. By default, all photos are returned."
                },
                {
                    "name": "limit",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Limits the number of photos to be retrieved. Values between 1—100 are accepted. Defaults to 100."
                }
            ],
            "extended_by": [],
            "return_types": [
                "UserProfilePhotos"
            ]
        },
        {
            "name": "getFile",
            "description": "Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a File object is returned. The file can then be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>, where <file_path> is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile again.",
            "fields": [
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "File identifier to get info about"
                }
            ],
            "extended_by": [],
            "return_types": [
                "File"
            ]
        },
        {
            "name": "kickChatMember",
            "description": "Use this method to kick a user from a group or a supergroup. In the case of supergroups, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the group for this to work. Returns True on success.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target group or username of the target supergroup (in the format @supergroupusername)"
                },
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "Unique identifier of the target user"
                }
            ],
            "extended_by": [],
            "return_types": [
                "bool"
            ]
        },
        {
            "name": "leaveChat",
            "description": "Use this method for your bot to leave a group, supergroup or channel. Returns True on success.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)"
                }
            ],
            "extended_by": [],
            "return_types": [
                "bool"
            ]
        },
        {
            "name": "unbanChatMember",
            "description": "Use this method to unban a previously kicked user in a supergroup. The user will not return to the group automatically, but will be able to join via link, etc. The bot must be an administrator in the group for this to work. Returns True on success.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target group or username of the target supergroup (in the format @supergroupusername)"
                },
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "Unique identifier of the target user"
                }
            ],
            "extended_by": [],
            "return_types": [
                "bool"
            ]
        },
        {
            "name": "getChat",
            "description": "Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a Chat object on success.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)"
                }
            ],
            "extended_by": [],
            "return_types": [
                "Chat"
            ]
        },
        {
            "name": "getChatAdministrators",
            "description": "Use this method to get a list of administrators in a chat. On success, returns an Array of ChatMember objects that contains information about all chat administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed, only the creator will be returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)"
                }
            ],
            "extended_by": [],
            "return_types": [
                "Array<ChatMember>"
            ]
        },
        {
            "name": "getChatMembersCount",
            "description": "Use this method to get the number of members in a chat. Returns Int on success.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)"
                }
            ],
            "extended_by": [],
            "return_types": [
                "int"
            ]
        },
        {
            "name": "getChatMember",
            "description": "Use this method to get information about a member of a chat. Returns a ChatMember object on success.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)"
                },
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "Unique identifier of the target user"
                }
            ],
            "extended_by": [],
            "return_types": [
                "ChatMember"
            ]
        },
        {
            "name": "answerCallbackQuery",
            "description": "Use this method to send answers to callback queries sent from inline keyboards. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, True is returned.",
            "fields": [
                {
                    "name": "callback_query_id",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the query to be answered"
                },
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Text of the notification. If not specified, nothing will be shown to the user, 0-200 characters"
                },
                {
                    "name": "show_alert",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "If true, an alert will be shown by the client instead of a notification at the top of the chat screen. Defaults to false."
                },
                {
                    "name": "url",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "URL that will be opened by the user's client. If you have created a Game and accepted the conditions via @Botfather, specify the URL that opens your game – note that this will only work if the query comes from a callback_game button.Otherwise, you may use links like telegram.me/your_bot?start=XXXX that open your bot with a parameter."
                }
            ],
            "extended_by": [],
            "return_types": [
                "bool"
            ]
        },
        {
            "name": "editMessageText",
            "description": "Use this method to edit text and game messages sent by the bot or via the bot (for inline bots). On success, if edited message is sent by the bot, the edited Message is returned, otherwise True is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier of the sent message"
                },
                {
                    "name": "inline_message_id",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Required if chat_id and message_id are not specified. Identifier of the inline message"
                },
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "New text of the message"
                },
                {
                    "name": "parse_mode",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Send Markdown or HTML, if you want Telegram apps to show bold, italic, fixed-width text or inline URLs in your bot's message."
                },
                {
                    "name": "disable_web_page_preview",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Disables link previews for links in this message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "required": false,
                    "description": "A JSON-serialized object for an inline keyboard."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message",
                "bool"
            ]
        },
        {
            "name": "editMessageCaption",
            "description": "Use this method to edit captions of messages sent by the bot or via the bot (for inline bots). On success, if edited message is sent by the bot, the edited Message is returned, otherwise True is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier of the sent message"
                },
                {
                    "name": "inline_message_id",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Required if chat_id and message_id are not specified. Identifier of the inline message"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "New caption of the message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "required": false,
                    "description": "A JSON-serialized object for an inline keyboard."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message",
                "bool"
            ]
        },
        {
            "name": "editMessageReplyMarkup",
            "description": "Use this method to edit only the reply markup of messages sent by the bot or via the bot (for inline bots). On success, if edited message is sent by the bot, the edited Message is returned, otherwise True is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier of the sent message"
                },
                {
                    "name": "inline_message_id",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Required if chat_id and message_id are not specified. Identifier of the inline message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup"
                    ],
                    "required": false,
                    "description": "A JSON-serialized object for an inline keyboard."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message",
                "bool"
            ]
        },
        {
            "name": "answerInlineQuery",
            "description": "Use this method to send answers to an inline query. On success, True is returned.No more than 50 results per query are allowed.",
            "fields": [
                {
                    "name": "inline_query_id",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the answered query"
                },
                {
                    "name": "results",
                    "types": [
                        "Array<InlineQueryResult>"
                    ],
                    "required": true,
                    "description": "A JSON-serialized array of results for the inline query"
                },
                {
                    "name": "cache_time",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300."
                },
                {
                    "name": "is_personal",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Pass True, if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query"
                },
                {
                    "name": "next_offset",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don‘t support pagination. Offset length can’t exceed 64 bytes."
                },
                {
                    "name": "switch_pm_text",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "If passed, clients will display a button with specified text that switches the user to a private chat with the bot and sends the bot a start message with the parameter switch_pm_parameter"
                },
                {
                    "name": "switch_pm_parameter",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Parameter for the start message sent to the bot when user presses the switch buttonExample: An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a ‘Connect your YouTube account’ button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an oauth link. Once done, the bot can offer a switch_inline button so that the user can easily return to the chat where they wanted to use the bot's inline capabilities."
                }
            ],
            "extended_by": [],
            "return_types": [
                "bool"
            ]
        },
        {
            "name": "sendGame",
            "description": "Use this method to send a game. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": true,
                    "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername)"
                },
                {
                    "name": "game_short_name",
                    "types": [
                        "string"
                    ],
                    "required": true,
                    "description": "Short name of the game, serves as the unique identifier for the game. Set up your games via Botfather."
                },
                {
                    "name": "disable_notification",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "InlineKeyboardMarkup",
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "required": false,
                    "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to hide reply keyboard or to force a reply from the user."
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "setGameScore",
            "description": "Use this method to set the score of the specified user in a game. On success, if the message was sent by the bot, returns the edited Message, otherwise returns True. Returns an error, if the new score is not greater than the user's current score in the chat.",
            "fields": [
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "User identifier"
                },
                {
                    "name": "score",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "New score, must be positive"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier for the target chat (or username of the target channel in the format @channelusername)"
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier of the sent message"
                },
                {
                    "name": "inline_message_id",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Required if chat_id and message_id are not specified. Identifier of the inline message"
                },
                {
                    "name": "edit_message",
                    "types": [
                        "bool"
                    ],
                    "required": false,
                    "description": "Pass True, if the game message should be automatically edited to include the current scoreboard"
                }
            ],
            "extended_by": [],
            "return_types": [
                "Message",
                "bool"
            ]
        },
        {
            "name": "getGameHighScores",
            "description": "Use this method to get data for high score tables. Will return the score of the specified user and several of his neighbors in a game. On success, returns an Array of GameHighScore objects.",
            "fields": [
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "required": true,
                    "description": "Target user id"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int",
                        "string"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier for the target chat (or username of the target channel in the format @channelusername)"
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "required": false,
                    "description": "Required if inline_message_id is not specified. Unique identifier of the sent message"
                },
                {
                    "name": "inline_message_id",
                    "types": [
                        "string"
                    ],
                    "required": false,
                    "description": "Required if chat_id and message_id are not specified. Identifier of the inline message"
                }
            ],
            "extended_by": [],
            "return_types": [
                "Array<GameHighScore>"
            ]
        }
    ]
}