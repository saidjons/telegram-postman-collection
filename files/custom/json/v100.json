{
    "version": "1.0.0",
    "types": [
        {
            "name": "Update",
            "description": "This object represents an incoming update.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "update_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "The update‘s unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you’re using Webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order."
                },
                {
                    "name": "message",
                    "types": [
                        "Message"
                    ],
                    "optional": true,
                    "description": "Optional. New incoming message of any kind — text, photo, sticker, etc."
                }
            ],
            "extended_by": []
        },
        {
            "name": "User",
            "description": "This object represents a Telegram user or bot.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this user or bot"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "User‘s or bot’s first name"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. User‘s or bot’s last name"
                },
                {
                    "name": "username",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. User‘s or bot’s username"
                }
            ],
            "extended_by": []
        },
        {
            "name": "GroupChat",
            "description": "This object represents a group chat.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this group chat"
                },
                {
                    "name": "title",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Group name"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Message",
            "description": "This object represents a message.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique message identifier"
                },
                {
                    "name": "from",
                    "types": [
                        "User"
                    ],
                    "optional": false,
                    "description": "Sender"
                },
                {
                    "name": "date",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Date the message was sent in Unix time"
                },
                {
                    "name": "chat",
                    "types": [
                        "User",
                        "GroupChat"
                    ],
                    "optional": false,
                    "description": "Conversation the message belongs to — user in case of a private message, GroupChat in case of a group"
                },
                {
                    "name": "forward_from",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. For forwarded messages, sender of the original message"
                },
                {
                    "name": "forward_date",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. For forwarded messages, date the original message was sent in Unix time"
                },
                {
                    "name": "reply_to_message",
                    "types": [
                        "Message"
                    ],
                    "optional": true,
                    "description": "Optional. For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply."
                },
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. For text messages, the actual UTF-8 text of the message"
                },
                {
                    "name": "audio",
                    "types": [
                        "Audio"
                    ],
                    "optional": true,
                    "description": "Optional. Message is an audio file, information about the file"
                },
                {
                    "name": "document",
                    "types": [
                        "Document"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a general file, information about the file"
                },
                {
                    "name": "photo",
                    "types": [
                        "Array<PhotoSize>"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a photo, available sizes of the photo"
                },
                {
                    "name": "sticker",
                    "types": [
                        "Sticker"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a sticker, information about the sticker"
                },
                {
                    "name": "video",
                    "types": [
                        "Video"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a video, information about the video"
                },
                {
                    "name": "contact",
                    "types": [
                        "Contact"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a shared contact, information about the contact"
                },
                {
                    "name": "location",
                    "types": [
                        "Location"
                    ],
                    "optional": true,
                    "description": "Optional. Message is a shared location, information about the location"
                },
                {
                    "name": "new_chat_participant",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. A new member was added to the group, information about them (this member may be bot itself)"
                },
                {
                    "name": "left_chat_participant",
                    "types": [
                        "User"
                    ],
                    "optional": true,
                    "description": "Optional. A member was removed from the group, information about them (this member may be bot itself)"
                },
                {
                    "name": "new_chat_title",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. A group title was changed to this value"
                },
                {
                    "name": "new_chat_photo",
                    "types": [
                        "Array<PhotoSize>"
                    ],
                    "optional": true,
                    "description": "Optional. A group photo was change to this value"
                },
                {
                    "name": "delete_chat_photo",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Informs that the group photo was deleted",
                    "default": true
                },
                {
                    "name": "group_chat_created",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Informs that the group has been created",
                    "default": true
                }
            ],
            "extended_by": []
        },
        {
            "name": "PhotoSize",
            "description": "This object represents one size of a photo or a file / sticker thumbnail.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "width",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Photo width"
                },
                {
                    "name": "height",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Photo height"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Audio",
            "description": "This object represents an audio file (voice note).",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Duration of the audio in seconds as defined by sender"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. MIME type of the file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Document",
            "description": "This object represents a general file (as opposed to photos and audio files).",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique file identifier"
                },
                {
                    "name": "thumb",
                    "types": [
                        "PhotoSize"
                    ],
                    "optional": false,
                    "description": "Document thumbnail as defined by sender"
                },
                {
                    "name": "file_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Original filename as defined by sender"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. MIME type of the file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Sticker",
            "description": "This object represents a sticker.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "width",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Sticker width"
                },
                {
                    "name": "height",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Sticker height"
                },
                {
                    "name": "thumb",
                    "types": [
                        "PhotoSize"
                    ],
                    "optional": false,
                    "description": "Sticker thumbnail in .webp or .jpg format"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Video",
            "description": "This object represents a video file.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "file_id",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Unique identifier for this file"
                },
                {
                    "name": "width",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Video width as defined by sender"
                },
                {
                    "name": "height",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Video height as defined by sender"
                },
                {
                    "name": "duration",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Duration of the video in seconds as defined by sender"
                },
                {
                    "name": "thumb",
                    "types": [
                        "PhotoSize"
                    ],
                    "optional": false,
                    "description": "Video thumbnail"
                },
                {
                    "name": "mime_type",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Mime type of a file as defined by sender"
                },
                {
                    "name": "file_size",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Optional. File size"
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Text description of the video (usually empty)"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Contact",
            "description": "This object represents a phone contact.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "phone_number",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's phone number"
                },
                {
                    "name": "first_name",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Contact's first name"
                },
                {
                    "name": "last_name",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Contact's last name"
                },
                {
                    "name": "user_id",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Optional. Contact's user identifier in Telegram"
                }
            ],
            "extended_by": []
        },
        {
            "name": "Location",
            "description": "This object represents a point on the map.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Longitude as defined by sender"
                },
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Latitude as defined by sender"
                }
            ],
            "extended_by": []
        },
        {
            "name": "UserProfilePhotos",
            "description": "This object represent a user's profile pictures.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "total_count",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Total number of profile pictures the target user has"
                },
                {
                    "name": "photos",
                    "types": [
                        "Array<Array<PhotoSize>>"
                    ],
                    "optional": false,
                    "description": "Requested profile pictures (in up to 4 sizes each)"
                }
            ],
            "extended_by": []
        },
        {
            "name": "ReplyKeyboardMarkup",
            "description": "This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "keyboard",
                    "types": [
                        "Array<Array<string>>"
                    ],
                    "optional": false,
                    "description": "Array of button rows, each represented by an Array of Strings"
                },
                {
                    "name": "resize_keyboard",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app's standard keyboard.",
                    "default": false
                },
                {
                    "name": "one_time_keyboard",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Requests clients to hide the keyboard as soon as it's been used. Defaults to false.",
                    "default": false
                },
                {
                    "name": "selective",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.Example: A user requests to change the bot‘s language, bot replies to the request with a keyboard to select the new language. Other users in the group don’t see the keyboard."
                }
            ],
            "extended_by": []
        },
        {
            "name": "ReplyKeyboardHide",
            "description": "Upon receiving a message with this object, Telegram clients will hide the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "hide_keyboard",
                    "types": [
                        "bool"
                    ],
                    "optional": false,
                    "description": "Requests clients to hide the custom keyboard",
                    "default": true
                },
                {
                    "name": "selective",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Use this parameter if you want to hide keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.Example: A user votes in a poll, bot returns confirmation message in reply to the vote and hides keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet."
                }
            ],
            "extended_by": []
        },
        {
            "name": "ForceReply",
            "description": "Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot‘s message and tapped ’Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.",
            "fields": [
                {
                    "name": "Field",
                    "types": [
                        "Type"
                    ],
                    "optional": false,
                    "description": "Description"
                },
                {
                    "name": "force_reply",
                    "types": [
                        "bool"
                    ],
                    "optional": false,
                    "description": "Shows reply interface to the user, as if they manually selected the bot‘s message and tapped ’Reply'",
                    "default": true
                },
                {
                    "name": "selective",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Optional. Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message."
                }
            ],
            "extended_by": []
        },
        {
            "name": "InputFile",
            "description": "This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.",
            "fields": [],
            "extended_by": []
        }
    ],
    "methods": [
        {
            "name": "getUpdates",
            "description": "Use this method to receive incoming updates using long polling (wiki). An Array of Update objects is returned.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "offset",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Identifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as getUpdates is called with an offset higher than its update_id."
                },
                {
                    "name": "limit",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Limits the number of updates to be retrieved. Values between 1—100 are accepted. Defaults to 100",
                    "default": 100
                },
                {
                    "name": "timeout",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Timeout in seconds for long polling. Defaults to 0, i.e. usual short polling",
                    "default": 0
                }
            ],
            "return_types": [
                "Array<Update>"
            ]
        },
        {
            "name": "setWebhook",
            "description": "Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts.\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. www.example.com/<token>. Since nobody else knows your bot‘s token, you can be pretty sure it’s us.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "url",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "HTTPS url to send updates to. Use an empty string to remove webhook integration"
                }
            ],
            "return_types": []
        },
        {
            "name": "getMe",
            "description": "A simple method for testing your bot's auth token. Requires no parameters. Returns basic information about the bot in form of a User object.",
            "fields": [],
            "return_types": [
                "User"
            ]
        },
        {
            "name": "sendMessage",
            "description": "Use this method to send text messages. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "text",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Text of the message to be sent"
                },
                {
                    "name": "disable_web_page_preview",
                    "types": [
                        "bool"
                    ],
                    "optional": true,
                    "description": "Disables link previews for links in this message"
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "optional": true,
                    "description": "Additional interface options. A JSON-serialized object for a custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "forwardMessage",
            "description": "Use this method to forward messages of any kind. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "from_chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the chat where the original message was sent — User or GroupChat id"
                },
                {
                    "name": "message_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique message identifier"
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendPhoto",
            "description": "Use this method to send photos. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "photo",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "optional": false,
                    "description": "Photo to send. You can either pass a file_id as String to resend a photo that is already on the Telegram servers, or upload a new photo using multipart/form-data."
                },
                {
                    "name": "caption",
                    "types": [
                        "string"
                    ],
                    "optional": true,
                    "description": "Photo caption (may also be used when resending photos by file_id)."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "optional": true,
                    "description": "Additional interface options. A JSON-serialized object for a custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendAudio",
            "description": "Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "audio",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "optional": false,
                    "description": "Audio file to send. You can either pass a file_id as String to resend an audio that is already on the Telegram servers, or upload a new audio file using multipart/form-data."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "optional": true,
                    "description": "Additional interface options. A JSON-serialized object for a custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendDocument",
            "description": "Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "document",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "optional": false,
                    "description": "File to send. You can either pass a file_id as String to resend a file that is already on the Telegram servers, or upload a new file using multipart/form-data."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "optional": true,
                    "description": "Additional interface options. A JSON-serialized object for a custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendSticker",
            "description": "Use this method to send .webp stickers. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "sticker",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "optional": false,
                    "description": "Sticker to send. You can either pass a file_id as String to resend a sticker that is already on the Telegram servers, or upload a new sticker using multipart/form-data."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "optional": true,
                    "description": "Additional interface options. A JSON-serialized object for a custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendVideo",
            "description": "Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "video",
                    "types": [
                        "InputFile",
                        "string"
                    ],
                    "optional": false,
                    "description": "Video to send. You can either pass a file_id as String to resend a video that is already on the Telegram servers, or upload a new video file using multipart/form-data."
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "optional": true,
                    "description": "Additional interface options. A JSON-serialized object for a custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendLocation",
            "description": "Use this method to send point on the map. On success, the sent Message is returned.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "latitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Latitude of location"
                },
                {
                    "name": "longitude",
                    "types": [
                        "float"
                    ],
                    "optional": false,
                    "description": "Longitude of location"
                },
                {
                    "name": "reply_to_message_id",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "If the message is a reply, ID of the original message"
                },
                {
                    "name": "reply_markup",
                    "types": [
                        "ReplyKeyboardMarkup",
                        "ReplyKeyboardHide",
                        "ForceReply"
                    ],
                    "optional": true,
                    "description": "Additional interface options. A JSON-serialized object for a custom reply keyboard, instructions to hide keyboard or to force a reply from the user."
                }
            ],
            "return_types": [
                "Message"
            ]
        },
        {
            "name": "sendChatAction",
            "description": "Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status).\nWe only recommend using this method when a response from the bot will take a noticeable amount of time to arrive.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "chat_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier for the message recipient — User or GroupChat id"
                },
                {
                    "name": "action",
                    "types": [
                        "string"
                    ],
                    "optional": false,
                    "description": "Type of action to broadcast. Choose one, depending on what the user is about to receive: typing for text messages, upload_photo for photos, record_video or upload_video for videos, record_audio or upload_audio for audio files, upload_document for general files, find_location for location data."
                }
            ],
            "return_types": []
        },
        {
            "name": "getUserProfilePhotos",
            "description": "Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.",
            "fields": [
                {
                    "name": "Parameters",
                    "types": [
                        "Type"
                    ],
                    "optional": true,
                    "description": "Description"
                },
                {
                    "name": "user_id",
                    "types": [
                        "int"
                    ],
                    "optional": false,
                    "description": "Unique identifier of the target user"
                },
                {
                    "name": "offset",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Sequential number of the first photo to be returned. By default, all photos are returned."
                },
                {
                    "name": "limit",
                    "types": [
                        "int"
                    ],
                    "optional": true,
                    "description": "Limits the number of photos to be retrieved. Values between 1—100 are accepted. Defaults to 100.",
                    "default": 100
                }
            ],
            "return_types": [
                "UserProfilePhotos"
            ]
        }
    ]
}