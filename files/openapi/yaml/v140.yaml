openapi: 3.0.0
info:
    title: 'Telegram Bot API'
    description: 'Auto-generated OpenAPI schema by TGScraper.'
    version: 1.4.0
servers:
    -
        url: 'https://api.telegram.org/bot{token}'
        variables:
            token:
                default: '1234:AAbbcc'
                description: 'Bot''s unique authentication token, given by @BotFather.'
externalDocs:
    description: 'Official Telegram Bot API documentation.'
    url: 'https://core.telegram.org/bots/api'
components:
    responses:
        BadRequest:
            description: 'Bad request, you have provided malformed data.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        Unauthorized:
            description: 'The authorization token is invalid or it has been revoked.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        Forbidden:
            description: 'This action is forbidden.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        NotFound:
            description: 'The specified resource was not found.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        Conflict:
            description: 'There is a conflict with another instance using webhook or polling.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        TooManyRequests:
            description: 'You''re doing too many requests, retry after a while.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        ServerError:
            description: 'The bot API is experiencing some issues, try again later.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        UnknownError:
            description: 'An unknown error occurred.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
    schemas:
        Response:
            type: object
            description: 'Represents the default response object.'
            required:
                - ok
            properties:
                ok:
                    type: boolean
        Success:
            description: 'Request was successful, the result is returned.'
            allOf:
                -
                    $ref: '#/components/schemas/Response'
                -
                    type: object
                    required:
                        - result
                    properties:
                        result:
                            type: object
        Error:
            description: 'Request was unsuccessful, so an error occurred.'
            allOf:
                -
                    $ref: '#/components/schemas/Response'
                -
                    type: object
                    required:
                        - error_code
                        - description
                    properties:
                        error_code:
                            type: integer
                        description:
                            type: string
                        parameters:
                            $ref: '#/components/schemas/ResponseParameters'
        Update:
            description: 'This object represents an incoming update.'
            required:
                - update_id
            properties:
                update_id:
                    type: integer
                message:
                    $ref: '#/components/schemas/Message'
            type: object
        User:
            description: 'This object represents a Telegram user or bot.'
            required:
                - id
                - first_name
            properties:
                id:
                    type: integer
                first_name:
                    type: string
                last_name:
                    type: string
                username:
                    type: string
            type: object
        GroupChat:
            description: 'This object represents a group chat.'
            required:
                - id
                - title
            properties:
                id:
                    type: integer
                title:
                    type: string
            type: object
        Message:
            description: 'This object represents a message.'
            required:
                - message_id
                - from
                - date
                - chat
            properties:
                message_id:
                    type: integer
                from:
                    $ref: '#/components/schemas/User'
                date:
                    type: integer
                chat:
                    anyOf:
                        -
                            $ref: '#/components/schemas/User'
                        -
                            $ref: '#/components/schemas/GroupChat'
                forward_from:
                    $ref: '#/components/schemas/User'
                forward_date:
                    type: integer
                reply_to_message:
                    $ref: '#/components/schemas/Message'
                text:
                    type: string
                audio:
                    $ref: '#/components/schemas/Audio'
                document:
                    $ref: '#/components/schemas/Document'
                photo:
                    type: array
                    items:
                        $ref: '#/components/schemas/PhotoSize'
                sticker:
                    $ref: '#/components/schemas/Sticker'
                video:
                    $ref: '#/components/schemas/Video'
                voice:
                    $ref: '#/components/schemas/Voice'
                caption:
                    type: string
                contact:
                    $ref: '#/components/schemas/Contact'
                location:
                    $ref: '#/components/schemas/Location'
                new_chat_participant:
                    $ref: '#/components/schemas/User'
                left_chat_participant:
                    $ref: '#/components/schemas/User'
                new_chat_title:
                    type: string
                new_chat_photo:
                    type: array
                    items:
                        $ref: '#/components/schemas/PhotoSize'
                delete_chat_photo:
                    type: boolean
                group_chat_created:
                    type: boolean
            type: object
        PhotoSize:
            description: 'This object represents one size of a photo or a file / sticker thumbnail.'
            required:
                - file_id
                - width
                - height
            properties:
                file_id:
                    type: string
                width:
                    type: integer
                height:
                    type: integer
                file_size:
                    type: integer
            type: object
        Audio:
            description: 'This object represents an audio file to be treated as music by the Telegram clients.'
            required:
                - file_id
                - duration
            properties:
                file_id:
                    type: string
                duration:
                    type: integer
                performer:
                    type: string
                title:
                    type: string
                mime_type:
                    type: string
                file_size:
                    type: integer
            type: object
        Document:
            description: 'This object represents a general file (as opposed to photos, voice messages and audio files).'
            required:
                - file_id
            properties:
                file_id:
                    type: string
                thumb:
                    $ref: '#/components/schemas/PhotoSize'
                file_name:
                    type: string
                mime_type:
                    type: string
                file_size:
                    type: integer
            type: object
        Sticker:
            description: 'This object represents a sticker.'
            required:
                - file_id
                - width
                - height
            properties:
                file_id:
                    type: string
                width:
                    type: integer
                height:
                    type: integer
                thumb:
                    $ref: '#/components/schemas/PhotoSize'
                file_size:
                    type: integer
            type: object
        Video:
            description: 'This object represents a video file.'
            required:
                - file_id
                - width
                - height
                - duration
            properties:
                file_id:
                    type: string
                width:
                    type: integer
                height:
                    type: integer
                duration:
                    type: integer
                thumb:
                    $ref: '#/components/schemas/PhotoSize'
                mime_type:
                    type: string
                file_size:
                    type: integer
            type: object
        Voice:
            description: 'This object represents a voice note.'
            required:
                - file_id
                - duration
            properties:
                file_id:
                    type: string
                duration:
                    type: integer
                mime_type:
                    type: string
                file_size:
                    type: integer
            type: object
        Contact:
            description: 'This object represents a phone contact.'
            required:
                - phone_number
                - first_name
            properties:
                phone_number:
                    type: string
                first_name:
                    type: string
                last_name:
                    type: string
                user_id:
                    type: integer
            type: object
        Location:
            description: 'This object represents a point on the map.'
            required:
                - longitude
                - latitude
            properties:
                longitude:
                    type: number
                latitude:
                    type: number
            type: object
        UserProfilePhotos:
            description: 'This object represent a user''s profile pictures.'
            required:
                - total_count
                - photos
            properties:
                total_count:
                    type: integer
                photos:
                    type: array
                    items:
                        type: array
                        items:
                            $ref: '#/components/schemas/PhotoSize'
            type: object
        ReplyKeyboardMarkup:
            description: 'This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).'
            required:
                - keyboard
            properties:
                keyboard:
                    type: array
                    items:
                        type: array
                        items:
                            type: string
                resize_keyboard:
                    type: boolean
                one_time_keyboard:
                    type: boolean
                selective:
                    type: boolean
            type: object
        ReplyKeyboardHide:
            description: 'Upon receiving a message with this object, Telegram clients will hide the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).'
            required:
                - hide_keyboard
            properties:
                hide_keyboard:
                    type: boolean
                selective:
                    type: boolean
            type: object
        ForceReply:
            description: 'Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot‘s message and tapped ’Reply''). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.'
            required:
                - force_reply
            properties:
                force_reply:
                    type: boolean
                selective:
                    type: boolean
            type: object
        InputFile:
            description: 'This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.'
            type: object
paths:
    /getUpdates:
        description: 'Use this method to receive incoming updates using long polling (wiki). An Array of Update objects is returned.'
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                offset:
                                    type: integer
                                limit:
                                    type: integer
                                timeout:
                                    type: integer
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            properties:
                                offset:
                                    type: integer
                                limit:
                                    type: integer
                                timeout:
                                    type: integer
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                offset:
                                    type: integer
                                limit:
                                    type: integer
                                timeout:
                                    type: integer
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/Update'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /setWebhook:
        description: "Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts.\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. https://www.example.com/<token>. Since nobody else knows your bot‘s token, you can be pretty sure it’s us."
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                url:
                                    type: string
                                certificate:
                                    $ref: '#/components/schemas/InputFile'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            properties:
                                url:
                                    type: string
                                certificate:
                                    $ref: '#/components/schemas/InputFile'
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                url:
                                    type: string
                                certificate:
                                    $ref: '#/components/schemas/InputFile'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result: {  }
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /getMe:
        description: 'A simple method for testing your bot''s auth token. Requires no parameters. Returns basic information about the bot in form of a User object.'
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                    multipart/form-data:
                        schema:
                            type: object
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/User'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendMessage:
        description: 'Use this method to send text messages. On success, the sent Message is returned.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - text
                            properties:
                                chat_id:
                                    type: integer
                                text:
                                    type: string
                                parse_mode:
                                    type: string
                                disable_web_page_preview:
                                    type: boolean
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - text
                            properties:
                                chat_id:
                                    type: integer
                                text:
                                    type: string
                                parse_mode:
                                    type: string
                                disable_web_page_preview:
                                    type: boolean
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - text
                            properties:
                                chat_id:
                                    type: integer
                                text:
                                    type: string
                                parse_mode:
                                    type: string
                                disable_web_page_preview:
                                    type: boolean
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /forwardMessage:
        description: 'Use this method to forward messages of any kind. On success, the sent Message is returned.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - from_chat_id
                                - message_id
                            properties:
                                chat_id:
                                    type: integer
                                from_chat_id:
                                    type: integer
                                message_id:
                                    type: integer
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - from_chat_id
                                - message_id
                            properties:
                                chat_id:
                                    type: integer
                                from_chat_id:
                                    type: integer
                                message_id:
                                    type: integer
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - from_chat_id
                                - message_id
                            properties:
                                chat_id:
                                    type: integer
                                from_chat_id:
                                    type: integer
                                message_id:
                                    type: integer
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendPhoto:
        description: 'Use this method to send photos. On success, the sent Message is returned.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - photo
                            properties:
                                chat_id:
                                    type: integer
                                photo:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                caption:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - photo
                            properties:
                                chat_id:
                                    type: integer
                                photo:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                caption:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - photo
                            properties:
                                chat_id:
                                    type: integer
                                photo:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                caption:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendAudio:
        description: "Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\nFor backward compatibility, when the fields title and performer are both empty and the mime-type of the file to be sent is not audio/mpeg, the file will be sent as a playable voice message. For this to work, the audio must be in an .ogg file encoded with OPUS. This behavior will be phased out in the future. For sending voice messages, use the sendVoice method instead."
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - audio
                            properties:
                                chat_id:
                                    type: integer
                                audio:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                performer:
                                    type: string
                                title:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - audio
                            properties:
                                chat_id:
                                    type: integer
                                audio:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                performer:
                                    type: string
                                title:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - audio
                            properties:
                                chat_id:
                                    type: integer
                                audio:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                performer:
                                    type: string
                                title:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendDocument:
        description: 'Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - document
                            properties:
                                chat_id:
                                    type: integer
                                document:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - document
                            properties:
                                chat_id:
                                    type: integer
                                document:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - document
                            properties:
                                chat_id:
                                    type: integer
                                document:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendSticker:
        description: 'Use this method to send .webp stickers. On success, the sent Message is returned.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - sticker
                            properties:
                                chat_id:
                                    type: integer
                                sticker:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - sticker
                            properties:
                                chat_id:
                                    type: integer
                                sticker:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - sticker
                            properties:
                                chat_id:
                                    type: integer
                                sticker:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendVideo:
        description: 'Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - video
                            properties:
                                chat_id:
                                    type: integer
                                video:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                caption:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - video
                            properties:
                                chat_id:
                                    type: integer
                                video:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                caption:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - video
                            properties:
                                chat_id:
                                    type: integer
                                video:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                caption:
                                    type: string
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendVoice:
        description: 'Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - voice
                            properties:
                                chat_id:
                                    type: integer
                                voice:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - voice
                            properties:
                                chat_id:
                                    type: integer
                                voice:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - voice
                            properties:
                                chat_id:
                                    type: integer
                                voice:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/InputFile'
                                        -
                                            type: string
                                duration:
                                    type: integer
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendLocation:
        description: 'Use this method to send point on the map. On success, the sent Message is returned.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - latitude
                                - longitude
                            properties:
                                chat_id:
                                    type: integer
                                latitude:
                                    type: number
                                longitude:
                                    type: number
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - latitude
                                - longitude
                            properties:
                                chat_id:
                                    type: integer
                                latitude:
                                    type: number
                                longitude:
                                    type: number
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - latitude
                                - longitude
                            properties:
                                chat_id:
                                    type: integer
                                latitude:
                                    type: number
                                longitude:
                                    type: number
                                reply_to_message_id:
                                    type: integer
                                reply_markup:
                                    anyOf:
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'
                                        -
                                            $ref: '#/components/schemas/ReplyKeyboardHide'
                                        -
                                            $ref: '#/components/schemas/ForceReply'
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/Message'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /sendChatAction:
        description: "Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). \nWe only recommend using this method when a response from the bot will take a noticeable amount of time to arrive."
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - action
                            properties:
                                chat_id:
                                    type: integer
                                action:
                                    type: string
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - action
                            properties:
                                chat_id:
                                    type: integer
                                action:
                                    type: string
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - chat_id
                                - action
                            properties:
                                chat_id:
                                    type: integer
                                action:
                                    type: string
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result: {  }
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
    /getUserProfilePhotos:
        description: 'Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.'
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - user_id
                            properties:
                                user_id:
                                    type: integer
                                offset:
                                    type: integer
                                limit:
                                    type: integer
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            required:
                                - user_id
                            properties:
                                user_id:
                                    type: integer
                                offset:
                                    type: integer
                                limit:
                                    type: integer
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - user_id
                            properties:
                                user_id:
                                    type: integer
                                offset:
                                    type: integer
                                limit:
                                    type: integer
            responses:
                200:
                    description: 'Request was successful, the result is returned.'
                    content:
                        application/json:
                            schema:
                                allOf:
                                    -
                                        $ref: '#/components/schemas/Success'
                                    -
                                        type: object
                                        properties:
                                            result:
                                                $ref: '#/components/schemas/UserProfilePhotos'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                409:
                    $ref: '#/components/responses/Conflict'
                429:
                    $ref: '#/components/responses/TooManyRequests'
                5XX:
                    $ref: '#/components/responses/ServerError'
                default:
                    $ref: '#/components/responses/UnknownError'
